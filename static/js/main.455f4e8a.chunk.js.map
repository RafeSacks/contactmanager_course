{"version":3,"sources":["components/layout/Header.js","components/pages/NotFound.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","NotFound","About","Context","React","createContext","reducer","state","action","updated_state","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","res","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","json","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.455f4e8a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  let updated_state;\n\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      updated_state = {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n      break;\n\n    case \"ADD_CONTACT\":\n      updated_state = {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n      break;\n\n    case \"UPDATE_CONTACT\":\n      updated_state = {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n      break;\n\n    default:\n      updated_state = state;\n      break;\n  }\n\n  return updated_state;\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n    this.setState({ contacts: response.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-primary\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log(' getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport About from \"./components/pages/About\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}